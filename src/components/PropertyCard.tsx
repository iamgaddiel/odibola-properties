import { IonCard, IonCardContent, IonFab, IonFabButton, IonIcon, IonImg } from '@ionic/react'
import { heart, heartOutline } from 'ionicons/icons'
import React from 'react'
import { useRecoilValue } from 'recoil'
import { Pagination } from 'swiper'
import { SwiperSlide, Swiper } from 'swiper/react'
import { devDomain } from '../utils/selectors'




// * ======================== land size component ========================
interface landSizeProps {
    size: number
}

const LandSize = ({ size }: landSizeProps) => <p className='txt-14 heading-text mt-2'>{size}</p>

// * ========================= home detail component ===================
interface homeDetailProps {
    bedrooms?: number,
    showers?: number,
    size: number
}
const HomeDetail = ({ bedrooms, showers, size }: homeDetailProps) => {
    return (
        <div className='d-flex mt-3'>
            <div className='flx-center-y mx-2'>
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="11" cy="11" r="11" fill="#EDEDF0" />
                    <path d="M6 7.5C6 6.83696 6.26339 6.20107 6.73223 5.73223C7.20107 5.26339 7.83696 5 8.5 5H13.5C14.163 5 14.7989 5.26339 15.2678 5.73223C15.7366 6.20107 16 6.83696 16 7.5V9.05C16.5647 9.16527 17.0722 9.47209 17.4367 9.91855C17.8011 10.365 18.0001 10.9237 18 11.5V16.5C18 16.6326 17.9473 16.7598 17.8536 16.8536C17.7598 16.9473 17.6326 17 17.5 17C17.3674 17 17.2402 16.9473 17.1464 16.8536C17.0527 16.7598 17 16.6326 17 16.5V14H5V16.5C5 16.6326 4.94732 16.7598 4.85355 16.8536C4.75979 16.9473 4.63261 17 4.5 17C4.36739 17 4.24021 16.9473 4.14645 16.8536C4.05268 16.7598 4 16.6326 4 16.5V11.5C3.99988 10.9237 4.19889 10.365 4.56335 9.91855C4.9278 9.47209 5.43532 9.16527 6 9.05V7.5ZM5 13H17V11.5C17 11.1022 16.842 10.7206 16.5607 10.4393C16.2794 10.158 15.8978 10 15.5 10H6.5C6.10218 10 5.72064 10.158 5.43934 10.4393C5.15804 10.7206 5 11.1022 5 11.5V13ZM15 7.5C15 7.10218 14.842 6.72064 14.5607 6.43934C14.2794 6.15804 13.8978 6 13.5 6H8.5C8.10218 6 7.72064 6.15804 7.43934 6.43934C7.15804 6.72064 7 7.10218 7 7.5V9H8V8.5C8 8.36739 8.05268 8.24021 8.14645 8.14645C8.24021 8.05268 8.36739 8 8.5 8H10C10.1326 8 10.2598 8.05268 10.3536 8.14645C10.4473 8.24021 10.5 8.36739 10.5 8.5V9H11.5V8.5C11.5 8.36739 11.5527 8.24021 11.6464 8.14645C11.7402 8.05268 11.8674 8 12 8H13.5C13.6326 8 13.7598 8.05268 13.8536 8.14645C13.9473 8.24021 14 8.36739 14 8.5V9H15V7.5Z" fill="#434553" />
                </svg>

                <span className="txt-14">{bedrooms}</span>
            </div>
            <div className='flx-center-y mx-2'>
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="11" cy="11" r="11" fill="#EDEDF0" />
                    <path d="M16.833 10.9997H6.91634V7.73885C6.91429 7.52876 6.96973 7.3221 7.07666 7.14125C7.18359 6.96039 7.33794 6.81222 7.52301 6.71277C7.72779 6.60207 7.96106 6.55534 8.19267 6.5786C8.07477 6.93556 8.05798 7.31819 8.14416 7.6841C8.23033 8.05002 8.41612 8.38494 8.68092 8.65177L9.29926 9.2701C9.35343 9.32434 9.41777 9.36736 9.48858 9.39672C9.5594 9.42607 9.63531 9.44118 9.71197 9.44118C9.78862 9.44118 9.86453 9.42607 9.93535 9.39672C10.0062 9.36736 10.0705 9.32434 10.1247 9.2701L12.1868 7.20802C12.2961 7.09862 12.3575 6.95028 12.3575 6.7956C12.3575 6.64092 12.2961 6.49257 12.1868 6.38318L11.5684 5.76485C11.2241 5.42198 10.7686 5.21341 10.2841 5.17672C9.79961 5.14003 9.31793 5.27765 8.92592 5.56477C8.57253 5.42667 8.19075 5.37701 7.81379 5.42011C7.43683 5.46321 7.07612 5.59777 6.76302 5.81208C6.44993 6.02639 6.19394 6.31395 6.01733 6.64976C5.84072 6.98556 5.74884 7.35943 5.74967 7.73885V10.9997H5.16634C5.01163 10.9997 4.86326 11.0611 4.75386 11.1705C4.64447 11.2799 4.58301 11.4283 4.58301 11.583C4.58301 11.7377 4.64447 11.8861 4.75386 11.9955C4.86326 12.1049 5.01163 12.1663 5.16634 12.1663H5.74967V13.9163C5.75075 14.2771 5.86347 14.6287 6.07236 14.9228C6.28125 15.2169 6.57608 15.4392 6.91634 15.559V16.2497C6.91634 16.4044 6.9778 16.5528 7.0872 16.6622C7.19659 16.7716 7.34496 16.833 7.49967 16.833C7.65438 16.833 7.80276 16.7716 7.91215 16.6622C8.02155 16.5528 8.08301 16.4044 8.08301 16.2497V15.6663H13.9163V16.2497C13.9163 16.4044 13.9778 16.5528 14.0872 16.6622C14.1966 16.7716 14.345 16.833 14.4997 16.833C14.6544 16.833 14.8028 16.7716 14.9122 16.6622C15.0216 16.5528 15.083 16.4044 15.083 16.2497V15.559C15.4233 15.4392 15.7181 15.2169 15.927 14.9228C16.1359 14.6287 16.2486 14.2771 16.2497 13.9163V12.1663H16.833C16.9877 12.1663 17.1361 12.1049 17.2455 11.9955C17.3549 11.8861 17.4163 11.7377 17.4163 11.583C17.4163 11.4283 17.3549 11.2799 17.2455 11.1705C17.1361 11.0611 16.9877 10.9997 16.833 10.9997ZM9.50634 6.58968C9.67055 6.42611 9.89289 6.33427 10.1247 6.33427C10.3565 6.33427 10.5788 6.42611 10.743 6.58968L10.9495 6.7956L9.71226 8.03285L9.50576 7.82693C9.34168 7.66275 9.24952 7.44013 9.24952 7.20802C9.24952 6.9759 9.34168 6.75329 9.50576 6.5891L9.50634 6.58968ZM15.083 13.9163C15.083 14.0711 15.0216 14.2194 14.9122 14.3288C14.8028 14.4382 14.6544 14.4997 14.4997 14.4997H7.49967C7.34496 14.4997 7.19659 14.4382 7.0872 14.3288C6.9778 14.2194 6.91634 14.0711 6.91634 13.9163V12.1663H15.083V13.9163Z" fill="#434553" />
                </svg>
                <span className="txt-14">{showers}</span>
            </div>
            <div className='flx-center-y mx-2'>
                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="11" cy="11" r="11" fill="#EDEDF0" />
                    <g clipPath="url(#clip0_252_1585)">
                        <path d="M16.2838 10.9508C16.2838 12.5969 16.2838 14.2434 16.2838 15.8894C16.2838 16.229 16.1225 16.3902 15.7817 16.3902C12.4823 16.3902 9.18296 16.3902 5.88316 16.3902C5.54362 16.3902 5.38281 16.229 5.38281 15.8882C5.38281 12.5888 5.38281 9.28898 5.38281 5.9896C5.38281 5.64964 5.54362 5.48926 5.88444 5.48926C9.18381 5.48926 12.4832 5.48926 15.783 5.48926C16.123 5.48926 16.2838 5.65007 16.2838 5.99088C16.2838 7.6442 16.2838 9.29751 16.2838 10.9508ZM9.58264 6.34492C9.58264 6.63711 9.58349 6.91693 9.58179 7.19674C9.58136 7.25646 9.58008 7.31874 9.5643 7.37547C9.50842 7.57467 9.30837 7.70477 9.10831 7.67875C8.89205 7.65059 8.73593 7.47613 8.73209 7.24537C8.7274 6.98304 8.73081 6.72029 8.73081 6.45753C8.73081 6.42042 8.73081 6.38331 8.73081 6.34876C7.8888 6.34876 7.06428 6.34876 6.24317 6.34876C6.24317 7.18181 6.24317 8.00634 6.24317 8.82745C7.0758 8.82745 7.90075 8.82745 8.73081 8.82745C8.73081 8.75451 8.72996 8.69095 8.73081 8.6274C8.73465 8.35824 8.91125 8.16971 9.15907 8.17013C9.40733 8.17056 9.58136 8.35739 9.58221 8.6291C9.58349 9.05139 9.58349 9.47368 9.58179 9.89596C9.58179 9.95184 9.57752 10.0103 9.56131 10.0636C9.50245 10.2581 9.30282 10.3856 9.11002 10.3583C8.8929 10.3281 8.74276 10.1626 8.73167 9.93734C8.72783 9.85757 8.73124 9.77738 8.73124 9.69719C7.88923 9.69719 7.06513 9.69719 6.24231 9.69719C6.24231 10.5307 6.24231 11.3556 6.24231 12.1814C7.07409 12.1814 7.89819 12.1814 8.73081 12.1814C8.73081 11.8824 8.72868 11.5919 8.73124 11.3014C8.7338 11.0336 8.91466 10.848 9.16504 10.8506C9.40946 10.8536 9.58051 11.0378 9.58221 11.3044C9.58392 11.5599 9.58221 11.8154 9.58307 12.0709C9.58307 12.1085 9.5869 12.1456 9.58904 12.19C9.65771 12.19 9.71444 12.19 9.77075 12.19C10.3986 12.19 11.0269 12.1882 11.6548 12.1912C11.8779 12.1921 12.04 12.3358 12.0758 12.5512C12.1091 12.7487 11.9939 12.9492 11.799 13.0119C11.7265 13.0354 11.6459 13.0409 11.5687 13.0409C9.83729 13.0426 8.10549 13.0422 6.37412 13.0422C6.32976 13.0422 6.2854 13.0422 6.24189 13.0422C6.24189 13.8829 6.24189 14.7075 6.24189 15.5328C9.30666 15.5328 12.3638 15.5328 15.4255 15.5328C15.4255 14.7028 15.4255 13.8782 15.4255 13.0422C15.3786 13.0422 15.3372 13.0422 15.2954 13.0422C14.6637 13.0422 14.0324 13.0418 13.4007 13.0422C13.2113 13.0422 13.0612 12.9727 12.9754 12.7965C12.8359 12.509 13.042 12.1925 13.3738 12.1908C14.0162 12.1874 14.6582 12.19 15.3006 12.19C15.3419 12.19 15.3829 12.19 15.4234 12.19C15.4234 10.2321 15.4234 8.28957 15.4234 6.34492C13.4771 6.34492 11.5371 6.34492 9.58264 6.34492Z" fill="#434553" />
                    </g>
                    <defs>
                        <clipPath id="clip0_252_1585">
                            <rect width="11.6261" height="11.7728" fill="white" transform="translate(5 5)" />
                        </clipPath>
                    </defs>
                </svg>

                <span className="txt-14">{size}</span>
            </div>
        </div>
    )
}

// * ========================= property card component ===================

interface cardProps {
    images: string[],
    propertyTitle: string,
    description: string,
    propertyType: string | undefined,
    size: number,
    noOfBedrooms?: number,
    noOfShowers?: number
}

const PropertyCard = ({
    images,
    propertyTitle,
    description,
    propertyType,
    size,
    noOfBedrooms,
    noOfShowers
}: cardProps) => {

    const domain = useRecoilValue(devDomain)

    return (
        <IonCard className="my-5">
            <IonFab horizontal='end' vertical='top'>
                <IonFabButton color='default'>
                    <IonIcon icon={heartOutline} color="danger" className='light-text' />
                </IonFabButton>
            </IonFab>

            <Swiper
                modules={[Pagination]}
                spaceBetween={20}
                slidesPerView={1}
                navigation
                pagination={{ clickable: true }}
                // onSwiper={(swiper) => console.log(swiper)}
                // onSlideChange={() => console.log('slide change')}
            >
                {
                    React.Children.map(images, (image: string[]) => (
                        <SwiperSlide >
                            <div className="card-image-wrapper">
                                <IonImg
                                    src={`${domain}${image}`}
                                    // className="card-img-top"
                                    alt="..."
                                />
                            </div>
                        </SwiperSlide>
                    ))
                }
            </Swiper>
            <IonCardContent>
                {propertyTitle === undefined ? '' : <h5 className="card-title bold">{propertyTitle}</h5>}
                <h6 className="card-subtitle txt-14 gray-text">{description}</h6>
                {propertyType === 'home' && noOfBedrooms !== null ?
                    <HomeDetail size={size} showers={noOfShowers} bedrooms={noOfBedrooms} /> :
                    <LandSize size={size} />
                }
                <p className="card-text"></p>
            </IonCardContent>
        </IonCard>
    )
}

export default PropertyCard
